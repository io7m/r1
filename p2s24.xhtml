<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>io7m-r1 0.10.0 Documentation: 2.24. Shadow mapping - Variance</title><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-layout.css"/><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-colour.css"/><link rel="stylesheet" type="text/css" href="documentation.css"/></head><body><div class="st200_body"><div class="brand">
  <div class="brand_left">
    <a href="http://io7m.com/">io7m</a>
  </div>
  <div class="brand_right">
    <a href="http://mvn.io7m.com/io7m-r1/">io7m-r1</a> 0.10.0
  </div>
</div><div class="st200_navbar st200_navbar_top"><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_title_cell">2.23. Shadow mapping - Basic</td><td class="st200_navbar_up_title_cell">2. Design and Implementation</td><td class="st200_navbar_next_title_cell">2.25. Generic Refraction</td></tr><tr><td class="st200_navbar_prev_file_cell"><a href="p2s23.xhtml#st200_p2s23">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p2.xhtml#st200_p2">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p2s25.xhtml#st200_p2s25">Next</a></td></tr></table><hr class="st200_hr"/></div><div class="st200_section_container"><div class="st200_section_title_number"><a id="st200_p2s24" href="#st200_p2s24">2.24</a></div><div class="st200_section_title">Shadow mapping - Variance</div><ul class="st200_contents st200_section_contents_outer st200_section_contents"><li class="st200_contents_item st200_contents_item1 st200_contents_item_subsection"><a href="p2s24.xhtml#st200_p2s24ss1">2.24.1. Overview</a></li><li class="st200_contents_item st200_contents_item1 st200_contents_item_subsection"><a href="p2s24.xhtml#st200_p2s24ss2">2.24.2. Algorithm</a></li><li class="st200_contents_item st200_contents_item1 st200_contents_item_subsection"><a href="p2s24.xhtml#st200_p2s24ss3">2.24.3. Types</a></li></ul><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p2s24ss1" href="#st200_p2s24ss1">2.24.1</a></div><div class="st200_subsection_title">Overview</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s24ss1pg1" href="#st200_p2s24ss1pg1">1</a></div><div class="st200_paragraph">
      <span class="st200_term term">Variance shadow mapping</span> is a technique
      that can give attractive soft-edged shadows. Using the same
      view and projection matrices used to apply
      <a class="st200_link" href="p2s21.xhtml#st200_p2s21">projective lights</a>,
      a <span class="st200_term term">depth-variance</span> image of the current
      scene is rendered, and those stored depth distribution values
      are used to determine the probability that a given
      point in the scene is in shadow with respect to the current light.
    </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s24ss1pg2" href="#st200_p2s24ss1pg2">2</a></div><div class="st200_paragraph">
      The algorithm implemented in the <span class="st200_term package">io7m-r1</span> 
      package is described in
      <a class="st200_link_external" href="http://http.developer.nvidia.com/GPUGems3/gpugems3_ch08.html">GPU Gems 3</a>,
      which is a set of improvements to the original variance shadow mapping
      algorithm by William Donnelly and Andrew Lauritzen. The
      <span class="st200_term package">io7m-r1</span> package implements
      all of the improvements to the algorithm except
      <span class="st200_term term">summed area tables</span>. The package also provides
      optional box blurring of shadows as described in the chapter.
    </div></div></div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p2s24ss2" href="#st200_p2s24ss2">2.24.2</a></div><div class="st200_subsection_title">Algorithm</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s24ss2pg1" href="#st200_p2s24ss2pg1">1</a></div><div class="st200_paragraph">
      Prior to actually <a class="st200_link" href="p2s12.xhtml#st200_p2s12">rendering</a> 
      a visible set, <span class="st200_term term">shadow maps</span> are generated
      for all <span class="st200_term term">shadow-projecting</span> lights in
      the set. A <span class="st200_term term">shadow map</span> for variance shadow
      mapping, for a light <span class="st200_term expression">k</span>, is a two-component 
      red/green image of all of the 
      <a class="st200_link" href="p2s11.xhtml#st200_p2s11ss3">shadow casters</a>
      associated with <span class="st200_term expression">k</span> in the visible set.
      The image is produced by rendering the instances from the point of view of
      <span class="st200_term expression">k</span>. The red
      channel of each pixel in the image represents the 
      <a class="st200_link" href="p2s14.xhtml#st200_p2s14">logarithmic depth</a>
      of the closest surface at that pixel, and the green channel represents
      the depth squared (literally <span class="st200_term expression">depth * depth</span>). 
      For example:
    </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p2s24ss2fo1" href="#st200_p2s24ss2fo1">2.24.2.1. Depth-variance image</a></div><img class="st200_image" alt="Depth-variance image" src="images/depth_variance.png"/></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s24ss2pg2" href="#st200_p2s24ss2pg2">2</a></div><div class="st200_paragraph">
      Then, when actually applying lighting during rendering of the
      scene, a given <a class="st200_link" href="p2s3.xhtml#st200_p2s3ss5">eye space</a>
      position <span class="st200_term expression">p</span> is transformed to
      <a class="st200_link" href="p2s21.xhtml#st200_p2s21ss2">light-clip space</a>
      and then mapped to the range
      <span class="st200_term expression">[(0, 0, 0), (1, 1, 1)]</span> in order
      to sample the <span class="st200_term term">depth</span> and
      <span class="st200_term term">depth squared</span> values
      <span class="st200_term expression">(d, ds)</span>
      from the shadow map (as with sampling from a projected texture
      with projective lighting). 
    </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s24ss2pg3" href="#st200_p2s24ss2pg3">3</a></div><div class="st200_paragraph">
      As stated previously, the intent of variance
      shadow mapping is to essentially calculate the 
      <span class="st200_term term">probability</span> that a given point is in shadow,
      rather than the binary <span class="st200_term term">is/is not</span> of
      <a class="st200_link" href="p2s23.xhtml#st200_p2s23">basic shadow mapping</a>.
      A <span class="st200_term term">one-tailed</span> variant of
      <a class="st200_link_external" href="https://en.wikipedia.org/wiki/Chebyshev%27s_inequality">Chebyshev's inequality</a>
      is used to calculate the upper bound <span class="st200_term expression">u</span>
      on the probability that, given
      <span class="st200_term expression">(d, ds)</span>, a given point with depth
      <span class="st200_term expression">t</span> is in shadow:
    </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p2s24ss2fo2" href="#st200_p2s24ss2fo2">2.24.2.2. Chebyshev 0</a></div><pre class="st200_verbatim">module ShadowVarianceChebyshev0 where

chebyshev :: (Float, Float) -&gt; Float -&gt; Float
chebyshev (d, ds) t =
  let p        = if t &lt;= d then 1.0 else 0.0
      variance = ds - (d * d)
      du       = t - d
      p_max    = variance / (variance + (du * du))
  in max p p_max

factor :: (Float, Float) -&gt; Float -&gt; Float
factor = chebyshev
</pre></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s24ss2pg4" href="#st200_p2s24ss2pg4">4</a></div><div class="st200_paragraph">
      One of the improvements suggested to the original variance shadow
      algorithm is to clamp the minimum variance to some small value
      (the <span class="st200_term package">io7m-r1</span> package uses <span class="st200_term constant">0.00002</span>
      by default, but this is configurable on a per-shadow basis). The
      equation above becomes:
    </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p2s24ss2fo3" href="#st200_p2s24ss2fo3">2.24.2.3. Chebyshev 1</a></div><pre class="st200_verbatim">module ShadowVarianceChebyshev1 where

data T = T {
  minimum_variance :: Float
} deriving (Eq, Show)

chebyshev :: (Float, Float) -&gt; Float -&gt; Float -&gt; Float
chebyshev (d, ds) min_variance t =
  let p        = if t &lt;= d then 1.0 else 0.0
      variance = max (ds - (d * d)) min_variance
      du       = t - d
      p_max    = variance / (variance + (du * du))
  in max p p_max

factor :: T -&gt; (Float, Float) -&gt; Float -&gt; Float
factor shadow (d, ds) t =
  chebyshev (d, ds) (minimum_variance shadow) t
</pre></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s24ss2pg5" href="#st200_p2s24ss2pg5">5</a></div><div class="st200_paragraph">
      The above is sufficient to give shadows that are roughly equivalent
      in visual quality to <a class="st200_link" href="p2s23.xhtml#st200_p2s23">basic shadow mapping</a>
      with the added benefit of being generally better behaved and with
      far fewer artifacts. However, the algorithm can suffer from
      <span class="st200_term term">light bleeding</span>, where the penumbrae
      of overlapping shadows can be unexpectedly bright despite the fact
      that the entire area should be in shadow. One of the suggested
      improvements to reduce light bleeding is to modify the upper bound
      <span class="st200_term expression">u</span> such that all values below
      a configurable threshold are mapped to zero, and values above the
      threshold are rescaled to map them to the range
      <span class="st200_term expression">[0, 1]</span>. The original article
      suggests a linear step function applied to 
      <span class="st200_term expression">u</span>:
    </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p2s24ss2fo4" href="#st200_p2s24ss2fo4">2.24.2.4. Chebyshev 2</a></div><pre class="st200_verbatim">module ShadowVarianceChebyshev2 where

data T = T {
  minimum_variance :: Float,
  bleed_reduction  :: Float
} deriving (Eq, Show)

chebyshev :: (Float, Float) -&gt; Float -&gt; Float -&gt; Float
chebyshev (d, ds) min_variance t =
  let p        = if t &lt;= d then 1.0 else 0.0
      variance = max (ds - (d * d)) min_variance
      du       = t - d
      p_max    = variance / (variance + (du * du))
  in max p p_max

clamp :: Float -&gt; (Float, Float) -&gt; Float
clamp x (lower, upper) = max (min x upper) lower

linear_step :: Float -&gt; Float -&gt; Float -&gt; Float
linear_step lower upper x = clamp ((x - lower) / (upper - lower)) (0.0, 1.0)

factor :: T -&gt; (Float, Float) -&gt; Float -&gt; Float
factor shadow (d, ds) t =
  let u = chebyshev (d, ds) (minimum_variance shadow) t in
    linear_step (bleed_reduction shadow) 1.0 u
</pre></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s24ss2pg6" href="#st200_p2s24ss2pg6">6</a></div><div class="st200_paragraph">
      The amount of light bleed reduction is adjustable on a per-shadow
      basis.
    </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s24ss2pg7" href="#st200_p2s24ss2pg7">7</a></div><div class="st200_paragraph">
      To reduce problems involving numeric inaccuracy, the
      original article suggests the use of 32-bit floating point textures
      in depth variance maps. The <span class="st200_term package">io7m-r1</span>
      package allows 16-bit or 32-bit textures, configurable on a per-shadow basis.
    </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s24ss2pg8" href="#st200_p2s24ss2pg8">8</a></div><div class="st200_paragraph">
      Finally, as mentioned previously, the <span class="st200_term package">io7m-r1</span>
      package allows both optional box blurring and mipmap generation for shadow
      maps. Both blurring and mipmapping can reduce aliasing artifacts,
      with the former also allowing the edges of shadows to be significantly
      softened as a visual effect:
    </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p2s24ss2fo5" href="#st200_p2s24ss2fo5">2.24.2.5. Depth-variance shadows (Minimal blur)</a></div><img class="st200_image" alt="Depth-variance shadows (Minimal blur)" src="images/variance_0.png"/></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p2s24ss2fo6" href="#st200_p2s24ss2fo6">2.24.2.6. Depth-variance shadows (High blur)</a></div><img class="st200_image" alt="Depth-variance shadows (High blur)" src="images/variance_1.png"/></div></div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p2s24ss3" href="#st200_p2s24ss3">2.24.3</a></div><div class="st200_subsection_title">Types</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s24ss3pg1" href="#st200_p2s24ss3pg1">1</a></div><div class="st200_paragraph">
      Variance mapped shadows are represented by the
      <a class="st200_link_external" href="apidocs/com/io7m/r1/kernel/types/KShadowMappedVariance.html">KShadowMappedVariance</a>
      type, and can be associated with
      <a class="st200_link" href="p2s21.xhtml#st200_p2s21">projective lights</a>.
    </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s24ss3pg2" href="#st200_p2s24ss3pg2">2</a></div><div class="st200_paragraph">
      Rendering of depth-variance images is handled by the
      <a class="st200_link_external" href="apidocs/com/io7m/r1/kernel/KDepthVarianceRendererType.html">KDepthVarianceRendererType</a>
      type.
    </div></div></div></div><div class="st200_navbar st200_navbar_bottom"><hr class="st200_hr"/><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_file_cell"><a href="p2s23.xhtml#st200_p2s23">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p2.xhtml#st200_p2">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p2s25.xhtml#st200_p2s25">Next</a></td></tr><tr><td class="st200_navbar_prev_title_cell">2.23. Shadow mapping - Basic</td><td class="st200_navbar_up_title_cell">2. Design and Implementation</td><td class="st200_navbar_next_title_cell">2.25. Generic Refraction</td></tr></table></div></div></body></html>
